package com.example.doctor_appointment;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.URLEncoder;
import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import org.apache.http.HttpEntity;
import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.impl.client.DefaultHttpClient;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.util.Log;
import android.view.Menu;
import android.widget.Toast;


public class page3 extends Activity 
{
	Button Next;
	
	EditText a, b, c, d;
	String patient_name;
	String age;
	String ph_no;
	String address;
	
protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.page3);
		a = (EditText) findViewById(R.id.editText1);
		b = (EditText) findViewById(R.id.editText2);
		c = (EditText) findViewById(R.id.editText3);
		d = (EditText) findViewById(R.id.editText4);
						 
		Next=(Button)findViewById(R.id.button1);
		Next.setOnClickListener(new View.OnClickListener() {
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
									
			    patient_name=a.getText().toString();
			    age=b.getText().toString();
			    ph_no = c.getText().toString();
				address = d.getText().toString();
				
				if("".equalsIgnoreCase(patient_name) 
						   || "".equalsIgnoreCase(age)
						   || "".equalsIgnoreCase(ph_no)
						   || "".equalsIgnoreCase(address))
						  
						{
						    Toast.makeText(page3.this, "All Fields Required.", 
						    		Toast.LENGTH_SHORT).show();
						}
					else
					{
						Toast.makeText(getApplicationContext(),"Registered successfully. . .",Toast.LENGTH_SHORT).show();
					}
				try {
					patient_name = URLEncoder.encode(patient_name, "UTF-8");
					age = URLEncoder.encode(age, "UTF-8");
					
					
					ph_no= URLEncoder.encode(ph_no, "UTF-8");
					address = URLEncoder.encode(address, "UTF-8");
					
					
					
					String url = "http://10.100.9.257/appoint.php?PATIENT_NAME="+ patient_name.trim() + "&AGE=" + age.trim()+ "&PH_NO="+ ph_no.trim()+ "&ADDRESS="+address.trim();
					System.out.println(url);
					pass_value_to_db get = new pass_value_to_db();
					get.execute(new String[] { url });

				} catch (UnsupportedEncodingException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
				
				Intent i1 = new Intent(page3.this, page5.class);
				startActivity(i1);

			}
		});

	}

	private class pass_value_to_db extends AsyncTask<String, Void, String> {

		ProgressDialog dialog;

		@Override
		protected void onPreExecute() { // TODO Auto-generated method stub
			dialog = new ProgressDialog(page3.this);
			dialog.setTitle("Processing...");
			dialog.setMessage("Please wait.");
			dialog.setCancelable(false);
			dialog.show();
		}

		@Override
		protected String doInBackground(String... urls) {
			String result = "";
			for (String url : urls) {
				InputStream is = null;
				try {

					HttpClient httpclient = new DefaultHttpClient();
					HttpPost httppost = new HttpPost(url);
					HttpResponse response = httpclient.execute(httppost);
					int status = response.getStatusLine().getStatusCode();
					Log.d("KG", "status=" + status);

					if (status == 200) {
						HttpEntity entity = response.getEntity();
						is = entity.getContent();
						BufferedReader reader = new BufferedReader(
								new InputStreamReader(is, "iso-8859-1"), 8);
						String line = "";
						while ((line = reader.readLine()) != null) {
							result += line;
						}
						is.close();

						Log.v("KG", result);

					}
				} catch (Exception ex) {
					Log.e("Error", ex.toString());
				}
				
				//Toast.makeText(getApplicationContext(),"Registered successfully", Toast.LENGTH_LONG).show();
				//Intent i=new Intent(SubActivity.this,MainActivity.class);
				//startActivity(i);
			}
			return result;
		}

		protected void onPostExecute(String result) {
			Log.v("KG", "output=" + result);
			result = result.trim(); //
			// Toast.makeText(getApplicationContext(), result, //
			// Toast.LENGTH_LONG).show();
			if (result.equals("false")) {

				// *******************************************************

				Toast.makeText(getApplicationContext(),
						" Please try again later...", Toast.LENGTH_SHORT).show();
			} else {
				System.out.println(result);

			}

			if (dialog != null)
				dialog.dismiss();

		}
	}
	
    @Override

public boolean onCreateOptionsMenu(Menu menu) {
	// Inflate the menu; this adds items to the action bar if it is present.
	getMenuInflater().inflate(R.menu.main, menu);
	return true;
}
}		